# These settings are synced to GitHub by https://probot.github.io/apps/settings/
# They can be subclassed in your repo using:
#   _extends: github-apps-config-next

repository:
  allow_squash_merge: false
  allow_merge_commit: true
  allow_rebase_merge: true

teams:
  # The next team is allowed to admin any of our repositories
  - name: customer-products
    permission: admin
  # Customer products collaborators should be alowed to push branches
  - name: customer-products-collaborators
    permission: push
  # All users with 2fa enabled should be able to read our repos
  - name: compliant-users
    permission: pull

branches:
  # Protect the main branch from force pushing
  - name: main
    protection:
      # Require status checks by default, this can be disabled when this is
      # subclassed
      required_status_checks:
        # Tests must have passed for the latest code instead of any commits on
        # the branch
        strict: true
        # Don't list any checks that must pass by default. This should be
        # overridden with important checks (e.g., a CircleCI test job) that
        # should pass before merging.
        checks: []
      # Require pull request reviews by default, this can be disabled when this
      # is subclassed
      required_pull_request_reviews:
        required_approving_review_count: 1
      # Require admins to pass the same rules as everyone else, given all
      # Customer Products engineers are admins
      enforce_admins: true
      # Restrict who can push to the main branch. By default any admin can
      # still push which means any Customer Products engineer can push, but
      # collaborators will need to get a Customer Products engineer to push or
      # merge pull requests for them
      restrictions:
        users: []
        teams: []
      # Explicitly enforce the default behaviour of disallowing force pushes to
      # a protected branch
      allow_force_pushes: false
      # Explicitly enforce the default behaviour of disallowing the protected
      # branch to be deleted
      allow_deletions: false
  # Protect the master branch from force pushing
  - name: master
    protection:
      # Require status checks by default, this can be disabled when this is
      # subclassed
      required_status_checks:
        # Tests must have passed for the latest code instead of any commits on
        # the branch
        strict: true
        # Don't list any checks that must pass by default. This should be
        # overridden with important checks (e.g., a CircleCI test job) that
        # should pass before merging.
        checks: []
      # Require pull request reviews by default, this can be disabled when this
      # is subclassed
      required_pull_request_reviews:
        required_approving_review_count: 1
      # Require admins to pass the same rules as everyone else, given all
      # Customer Products engineers are admins
      enforce_admins: true
      # Restrict who can push to the master branch. By default any admin can
      # still push which means any Customer Products engineer can push, but
      # collaborators will need to get a Customer Products engineer to push or
      # merge pull requests for them
      restrictions:
        users: []
        teams: []
      # Explicitly enforce the default behaviour of disallowing force pushes to
      # a protected branch
      allow_force_pushes: false
      # Explicitly enforce the default behaviour of disallowing the protected
      # branch to be deleted
      allow_deletions: false
